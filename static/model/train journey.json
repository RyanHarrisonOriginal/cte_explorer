[{"id": "customers", "parentIds": [], "sql": "(SELECT *\n FROM   customers)", "cols": [{"name": "all", "sql": "*"}]}, {"id": "station_proximity", "parentIds": ["customers", "london_bicycles.cycle_stations"], "sql": "(SELECT id as station_id,\n        name as station_name,\n        st_distance(st_geogpoint(longitude, latitude),\n                    st_geogpoint(-0.118092, 51.509865)) as distance_from_city_centre_m\n FROM   london_bicycles.cycle_stations join customers\n         ON lt.customer_id = rt.customer_id)", "cols": [{"name": "station_id", "sql": "id AS station_id"}, {"name": "station_name", "sql": "name AS station_name"}, {"name": "distance_from_city_centre_m", "sql": "ST_DISTANCE(ST_GEOGPOINT(longitude, latitude), ST_GEOGPOINT(-0.118092, 51.509865)) AS distance_from_city_centre_m"}]}, {"id": "station_journeys", "parentIds": ["station_proximity", "london_bicycles.cycle_hire"], "sql": "(SELECT s.station_id,\n        s.station_name,\n        s.distance_from_city_centre_m,\n        count(1) as journey_count\n FROM   station_proximity as s\n     INNER JOIN london_bicycles.cycle_hire as j\n         ON j.end_station_id = s.station_id and\n            cast(j.end_date as date) >= date_sub('2017-1-1', interval 1 year)\n GROUP BY s.station_id, s.station_name, s.distance_from_city_centre_m)", "cols": [{"name": "station_id", "sql": "s.station_id"}, {"name": "station_name", "sql": "s.station_name"}, {"name": "distance_from_city_centre_m", "sql": "s.distance_from_city_centre_m"}, {"name": "journey_count", "sql": "COUNT(1) AS journey_count"}]}, {"id": "stations_near_centre", "parentIds": ["station_journeys", "station_proximity"], "sql": "(SELECT sp.station_id,\n        sj.journey_count,\n        dense_rank() OVER(ORDER BY sj.journey_count desc) as journey_rank\n FROM   station_proximity as sp\n     INNER JOIN station_journeys as sj\n         ON sj.station_id = sp.station_id\n WHERE  sp.distance_from_city_centre_m <= 500)", "cols": [{"name": "station_id", "sql": "sp.station_id"}, {"name": "journey_count", "sql": "sj.journey_count"}, {"name": "journey_rank", "sql": "DENSE_RANK() OVER(ORDER BY sj.journey_count DESC) AS journey_rank"}]}, {"id": "london_bicycles.cycle_stations", "parentIds": [], "sql": "select * from london_bicycles.cycle_stations", "cols": [{"name": "all", "sql": "*"}]}, {"id": "london_bicycles.cycle_hire", "parentIds": [], "sql": "select * from london_bicycles.cycle_hire", "cols": [{"name": "all", "sql": "*"}]}]