[{"id": "position_steak", "parentIds": ["analytics.fct_chart_performance"], "sql": "(SELECT track_id,\n        track_chart_position,\n        track_chart_position_previous,\n        chart_date,\n        chart_name,\n        (row_number() OVER(PARTITION BY chart_name,\n                                        track_id\n                           ORDER BY chart_date) - row_number() OVER(PARTITION BY chart_name,\n                                        track_id,\n                                        track_chart_position\n                           ORDER BY chart_date)) as position_streak_id\n FROM   analytics.fct_chart_performance\n WHERE  track_id is not null)", "cols": [{"name": "track_id", "sql": "track_id"}, {"name": "track_chart_position", "sql": "track_chart_position"}, {"name": "track_chart_position_previous", "sql": "track_chart_position_previous"}, {"name": "chart_date", "sql": "chart_date"}, {"name": "chart_name", "sql": "chart_name"}, {"name": "position_streak_id", "sql": "(ROW_NUMBER() OVER(PARTITION BY chart_name, track_id ORDER BY chart_date) - ROW_NUMBER() OVER(PARTITION BY chart_name, track_id, track_chart_position ORDER BY chart_date)) AS position_streak_id"}]}, {"id": "consec_wks_at_pos", "parentIds": ["position_steak"], "sql": "(SELECT track_id,\n        track_chart_position,\n        chart_name,\n        count(1) as num_consecutive_weeks_at_position,\n        row_number() OVER(PARTITION BY chart_name,\n                                       track_id,\n                                       track_chart_position\n                          ORDER BY count(1) desc) as dedupe\n FROM   position_steak\n GROUP BY 1, 2, 3, position_streak_id)", "cols": [{"name": "track_id", "sql": "track_id"}, {"name": "track_chart_position", "sql": "track_chart_position"}, {"name": "chart_name", "sql": "chart_name"}, {"name": "num_consecutive_weeks_at_position", "sql": "COUNT(1) AS num_consecutive_weeks_at_position"}, {"name": "dedupe", "sql": "ROW_NUMBER() OVER(PARTITION BY chart_name, track_id, track_chart_position ORDER BY COUNT(1) DESC) AS dedupe"}]}, {"id": "final", "parentIds": ["analytics.dim_artists", "consec_wks_at_pos", "analytics.dim_tracks"], "sql": "(SELECT track_chart_position,\n        chart_name,\n        track_id,\n        concat(track_name,\n               ' by ',\n               artist_name,\n               ' @ position #',\n               track_chart_position) as track_name_with_position,\n        case when num_consecutive_weeks_at_position = max(num_consecutive_weeks_at_position) OVER(PARTITION BY chart_name,\n                                                                                                               track_id) then true\n             else false end as is_longest_streak_for_track,\n        num_consecutive_weeks_at_position\n FROM   consec_wks_at_pos\n     LEFT JOIN analytics.dim_tracks as tracks\n         ON lt.track_id = rt.track_id\n     LEFT JOIN analytics.dim_artists as artist\n         ON lt.artist_id = rt.artist_id\n WHERE  dedupe = 1\n ORDER BY num_consecutive_weeks_at_position desc)", "cols": [{"name": "track_chart_position", "sql": "track_chart_position"}, {"name": "chart_name", "sql": "chart_name"}, {"name": "track_id", "sql": "track_id"}, {"name": "track_name_with_position", "sql": "CONCAT(track_name, ' by ', artist_name, ' @ position #', track_chart_position) AS track_name_with_position"}, {"name": "is_longest_streak_for_track", "sql": "CASE WHEN num_consecutive_weeks_at_position = MAX(num_consecutive_weeks_at_position) OVER(PARTITION BY chart_name, track_id) THEN TRUE ELSE FALSE END AS is_longest_streak_for_track"}, {"name": "num_consecutive_weeks_at_position", "sql": "num_consecutive_weeks_at_position"}]}, {"id": "analytics.fct_chart_performance", "parentIds": [], "sql": "select * from analytics.fct_chart_performance", "cols": [{"name": "all", "sql": "*"}]}, {"id": "analytics.dim_artists", "parentIds": [], "sql": "select * from analytics.dim_artists", "cols": [{"name": "all", "sql": "*"}]}, {"id": "analytics.dim_tracks", "parentIds": [], "sql": "select * from analytics.dim_tracks", "cols": [{"name": "all", "sql": "*"}]}]