[
    {
        "id": "fct_chart_performance",
        "sql": "select * from fct_chart_performance",
        "cols": [
            {
                "name": "track_id",
                "sql": "track_id"
            },
            {
                "name": "track_chart_position",
                "sql": "track_chart_position"
            },
            {
                "name": "track_chart_position_previous",
                "sql": "track_chart_position_previous"
            },
            {
                "name": "chart_date",
                "sql": "chart_date"
            },
            {
                "name": "chart_name",
                "sql": "chart_name"
            },
            {
                "name": "position_streak_id",
                "sql": "(ROW_NUMBER() OVER(PARTITION BY chart_name, track_id ORDER BY chart_date) - ROW_NUMBER() OVER(PARTITION BY chart_name, track_id, track_chart_position ORDER BY chart_date)) AS position_streak_id"
            }
        ]
    },
    {
        "id": "position_steak",
        "parentIds": [
            "fct_chart_performance"
        ],
        "sql": "(SELECT track_id,\n        track_chart_position,\n        track_chart_position_previous,\n        chart_date,\n        chart_name,\n        (row_number() OVER(PARTITION BY chart_name,\n                                        track_id\n                           ORDER BY chart_date) - row_number() OVER(PARTITION BY chart_name,\n                                        track_id,\n                                        track_chart_position\n                           ORDER BY chart_date)) as position_streak_id\n FROM   billboard_analytics.fct_chart_performance\n WHERE  track_id is not null)",
        "cols": [
            {
                "name": "track_id",
                "sql": "track_id"
            },
            {
                "name": "track_chart_position",
                "sql": "track_chart_position"
            },
            {
                "name": "track_chart_position_previous",
                "sql": "track_chart_position_previous"
            },
            {
                "name": "chart_date",
                "sql": "chart_date"
            },
            {
                "name": "chart_name",
                "sql": "chart_name"
            },
            {
                "name": "position_streak_id",
                "sql": "(ROW_NUMBER() OVER(PARTITION BY chart_name, track_id ORDER BY chart_date) - ROW_NUMBER() OVER(PARTITION BY chart_name, track_id, track_chart_position ORDER BY chart_date)) AS position_streak_id"
            }
        ]
    },
    {
        "id": "consec_weeks_at_pos",
        "parentIds": [
            "position_steak"
        ],
        "sql": "(SELECT track_id,\n        track_chart_position,\n        chart_name,\n        count(1) as n_cons_wks_at_pos,\n        row_number() OVER(PARTITION BY chart_name,\n                                       track_id,\n                                       track_chart_position\n                          ORDER BY count(1) desc) as dedupe\n FROM   position_steak\n GROUP BY 1, 2, 3, position_streak_id)",
        "cols": [
            {
                "name": "track_id",
                "sql": "track_id"
            },
            {
                "name": "track_chart_position",
                "sql": "track_chart_position"
            },
            {
                "name": "chart_name",
                "sql": "chart_name"
            },
            {
                "name": "n_cons_wks_at_pos",
                "sql": "COUNT(1) AS n_cons_wks_at_pos"
            },
            {
                "name": "dedupe",
                "sql": "ROW_NUMBER() OVER(PARTITION BY chart_name, track_id, track_chart_position ORDER BY COUNT(1) DESC) AS dedupe"
            }
        ]
    },
    {
        "id": "dim_tracks",
        "sql": "select * from dim_tracks",
        "cols": [
            {
                "name": "track_chart_position",
                "sql": "track_chart_position"
            },
            {
                "name": "chart_name",
                "sql": "chart_name"
            },
            {
                "name": "track_id",
                "sql": "track_id"
            },
            {
                "name": "track_name_with_position",
                "sql": "CONCAT(track_name, ' by ', artist_name, ' @ position #', track_chart_position) AS track_name_with_position"
            },
            {
                "name": "is_longest_streak_for_track",
                "sql": "CASE WHEN n_cons_wks_at_pos = MAX(n_cons_wks_at_pos) OVER(PARTITION BY chart_name, track_id) THEN 1 ELSE 0 END AS is_longest_streak_for_track"
            },
            {
                "name": "n_cons_wks_at_pos",
                "sql": "n_cons_wks_at_pos"
            }
        ]
    },
    {
        "id": "dim_artists",
        "sql": "select * from dim_artists",
        "cols": [
            {
                "name": "track_chart_position",
                "sql": "track_chart_position"
            },
            {
                "name": "chart_name",
                "sql": "chart_name"
            },
            {
                "name": "track_id",
                "sql": "track_id"
            },
            {
                "name": "track_name_with_position",
                "sql": "CONCAT(track_name, ' by ', artist_name, ' @ position #', track_chart_position) AS track_name_with_position"
            },
            {
                "name": "is_longest_streak_for_track",
                "sql": "CASE WHEN n_cons_wks_at_pos = MAX(n_cons_wks_at_pos) OVER(PARTITION BY chart_name, track_id) THEN 1 ELSE 0 END AS is_longest_streak_for_track"
            },
            {
                "name": "n_cons_wks_at_pos",
                "sql": "n_cons_wks_at_pos"
            }
        ]
    },
    {
        "id": "final",
        "parentIds": [
            "consec_weeks_at_pos",
            "dim_tracks",
            "dim_artists"
        ],
        "sql": "(SELECT track_chart_position,\n        chart_name,\n        track_id,\n        concat(track_name,\n               ' by ',\n               artist_name,\n               ' @ position #',\n               track_chart_position) as track_name_with_position,\n        case when n_cons_wks_at_pos = max(n_cons_wks_at_pos) OVER(PARTITION BY chart_name,\n                                                                                                               track_id) then 1\n             else 0 end as is_longest_streak_for_track,\n        n_cons_wks_at_pos\n FROM   consec_weeks_at_pos as con\n     LEFT JOIN song_bird_analytics.dim_tracks as tracks\n         ON tracks.track_id = con.track_id\n     LEFT JOIN song_bird_analytics.dim_artists as artist\n         ON tracks.artist_id = artist.artist_id\n WHERE  dedupe = 1\n ORDER BY n_cons_wks_at_pos desc)",
        "cols": [
            {
                "name": "track_chart_position",
                "sql": "track_chart_position"
            },
            {
                "name": "chart_name",
                "sql": "chart_name"
            },
            {
                "name": "track_id",
                "sql": "track_id"
            },
            {
                "name": "track_name_with_position",
                "sql": "CONCAT(track_name, ' by ', artist_name, ' @ position #', track_chart_position) AS track_name_with_position"
            },
            {
                "name": "is_longest_streak_for_track",
                "sql": "CASE WHEN n_cons_wks_at_pos = MAX(n_cons_wks_at_pos) OVER(PARTITION BY chart_name, track_id) THEN 1 ELSE 0 END AS is_longest_streak_for_track"
            },
            {
                "name": "n_cons_wks_at_pos",
                "sql": "n_cons_wks_at_pos"
            }
        ]
    }
]